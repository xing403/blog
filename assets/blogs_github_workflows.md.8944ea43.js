import{_ as p,H as t,c,J as s,C as o,E as l,a,V as i,o as r}from"./chunks/framework.6db0e9f3.js";const y="/images/screenshot/workflows-test.png",w=JSON.parse('{"title":"GitHub Actions","description":"","frontmatter":{"title":"GitHub Actions","layout":"doc"},"headers":[],"relativePath":"blogs/github/workflows.md","filePath":"blogs/github/workflows.md","lastUpdated":1696915125000}'),D={name:"blogs/github/workflows.md"},h=o("h1",{id:"github-actions",tabindex:"-1"},[a("GitHub Actions "),o("a",{class:"header-anchor",href:"#github-actions","aria-label":'Permalink to "GitHub Actions"'},"​")],-1),u={style:{display:"flex",gap:"10px"}},d=i(`<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>GitHub Actions 是一种持续集成和持续交付 (CI/CD) 平台，可用于自动执行生成、测试和部署管道。 您可以创建工作流程来构建和测试存储库的每个拉取请求，或将合并的拉取请求部署到生产环境。</p><h2 id="github-actions-的组件" tabindex="-1">GitHub Actions 的组件 <a class="header-anchor" href="#github-actions-的组件" aria-label="Permalink to &quot;GitHub Actions 的组件&quot;">​</a></h2><p>配置 GitHub Actions 工作流，使其在存储库中发生事件（例如打开拉取请求或创建问题）时触发 。 工作流包含一个或多个可按顺序或并行运行的作业。 每个作业都将在其自己的虚拟机运行器中或在容器中运行，并具有一个或多个步骤，用于运行定义的脚本或运行动作。动作是一个可重用的扩展，可简化工作流 。 <img src="https://docs.github.com/assets/cb-25535/mw-1440/images/help/actions/overview-actions-simple.webp" alt=""></p><h2 id="工作流" tabindex="-1">工作流 <a class="header-anchor" href="#工作流" aria-label="Permalink to &quot;工作流&quot;">​</a></h2><p>工作流程是一个可配置的自动化过程，它将运行一个或多个作业。 工作流程由签入到存储库的 YAML 文件定义，并在存储库中的事件触发时运行，也可以手动触发，或按定义的时间表触发。</p><h2 id="使用工作流" tabindex="-1">使用工作流 <a class="header-anchor" href="#使用工作流" aria-label="Permalink to &quot;使用工作流&quot;">​</a></h2><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 定义工作流名称(自定义，非必须)</span></span>
<span class="line"><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test-github-action</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 工作流触发事件(https://docs.github.com/zh/actions/using-workflows/events-that-trigger-workflows)</span></span>
<span class="line"><span style="color:#FF9CAC;">on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">push</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 定义所有的作业项</span></span>
<span class="line"><span style="color:#F07178;">jobs</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 定义作业项的 id(自定义)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">test-github-action</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 定义作业项的 名称(自定义)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">test-github-action</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 指定运行所需要的虚拟机环境(必填)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">runs-on</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">ubuntu-latest</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;"># 指定每个 Job 的运行步骤，可以包含一个或多个步骤。每个步骤都可以指定以下三个字段。</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># name：步骤名称。</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># run：该步骤运行的命令或者 action。</span></span>
<span class="line"><span style="color:#89DDFF;">      </span><span style="color:#676E95;font-style:italic;"># env：该步骤所需的环境变量。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">steps</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">Print \`hello world\`</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">env</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">HELLO</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">hello</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">WORLD</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">world</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">run</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">echo $HELLO $WORLD</span></span></code></pre></div><h2 id="使用github-workflows" tabindex="-1">使用github-workflows <a class="header-anchor" href="#使用github-workflows" aria-label="Permalink to &quot;使用github-workflows&quot;">​</a></h2><ol><li>将编辑完成的 <code>.github/workflows/*.yaml</code> 提交到 github</li><li>提交后，github 会自动触发 workflow 运行</li><li>运行完成后，可以在 Actions 页面查看运行结果 <img src="`+y+'" alt="result"></li></ol>',10);function F(C,b,A,f,_,g){const e=t("el-divider"),n=t("el-tag");return r(),c("div",null,[h,s(e),o("div",u,[s(n,null,{default:l(()=>[a("github")]),_:1}),s(n,null,{default:l(()=>[a("tools")]),_:1}),s(n,null,{default:l(()=>[a("automation")]),_:1})]),d])}const E=p(D,[["render",F]]);export{w as __pageData,E as default};
