import{_ as t,C as o,c,H as s,k as p,w as l,a as n,Q as r,o as E}from"./chunks/framework.b0840c63.js";const B=JSON.parse('{"title":"RabbitMQ 消息服务","description":"","frontmatter":{"title":"RabbitMQ 消息服务","layout":"doc"},"headers":[],"relativePath":"blogs/java/springboot-rabbitMQ.md","filePath":"blogs/java/springboot-rabbitMQ.md","lastUpdated":1698109494000}'),y={name:"blogs/java/springboot-rabbitMQ.md"},i=p("h1",{id:"rabbitmq-消息服务",tabindex:"-1"},[n("RabbitMQ 消息服务 "),p("a",{class:"header-anchor",href:"#rabbitmq-消息服务","aria-label":'Permalink to "RabbitMQ 消息服务"'},"​")],-1),u={style:{display:"flex",gap:"10px"}},b=r(`<h2 id="安装-rabbitmq-服务" tabindex="-1">安装 RabbitMQ 服务 <a class="header-anchor" href="#安装-rabbitmq-服务" aria-label="Permalink to &quot;安装 RabbitMQ 服务&quot;">​</a></h2><p>由于 RabbitMQ 基于 erlang 语言，因此在安装的时需要先安装erlang</p><h3 id="下载-erlang" tabindex="-1">下载 erlang <a class="header-anchor" href="#下载-erlang" aria-label="Permalink to &quot;下载 erlang&quot;">​</a></h3><p>下载链接：<a href="https://www.erlang.org/downloads" target="_blank" rel="noreferrer">https://www.erlang.org/downloads</a> 这个可能有点慢，毕竟是外国网站，要是不想要最新版选择 <a href="https://pan.baidu.com/s/1c848j2odvZxwHvplJVsJ8A?p=b21g" target="_blank" rel="noreferrer">百度网盘</a></p><p>下载后双击.exe 文件安装即可，安装结束配置一下环境变量，检查环境变量是否配置成功 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513122457.png" alt=""></p><h3 id="下载-rabbitmq" tabindex="-1">下载 RabbitMQ <a class="header-anchor" href="#下载-rabbitmq" aria-label="Permalink to &quot;下载 RabbitMQ&quot;">​</a></h3><p>下载链接：<a href="https://www.rabbitmq.com/download.html" target="_blank" rel="noreferrer">https://www.rabbitmq.com/download.html</a> 这个也很慢，<a href="https://pan.baidu.com/s/1sbaNeA3ofyCVncv-MxaKeQ?p=zgkj" target="_blank" rel="noreferrer">百度网盘</a></p><p>双击即可安装(注意安装目录中尽量不要有空格)，在安装的过程发现安装好之后就自动启动了 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513123209.png" alt=""> 进入安装目录下的 <code>sbin</code> 目录 打开命令提示提示符窗口</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;"># 安装rabbitmq插件</span></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-plugins</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq_managemen</span></span>
<span class="line"><span style="color:#6A737D;"># 若出现错误，需要重启服务，正常请忽略</span></span>
<span class="line"><span style="color:#B392F0;">Rabbitmq-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-service</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;"># 安装rabbitmq插件</span></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-plugins</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq_managemen</span></span>
<span class="line"><span style="color:#6A737D;"># 若出现错误，需要重启服务，正常请忽略</span></span>
<span class="line"><span style="color:#6F42C1;">Rabbitmq-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-service</span></span></code></pre></div><blockquote><p>若停止服务失败，错误代码5。</p></blockquote><p>说明权限不够，系统登录的是普通用户，需要管理员的权限执行该命令。用管理员打开cmd，之后执行</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">rabbitmq-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">stop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">remove</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-service</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">rabbitmq-plugins</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">enable</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">rabbitmq_management</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">rabbitmq-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">stop</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">remove</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-service</span><span style="color:#24292E;"> </span><span style="color:#032F62;">start</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">rabbitmq-plugins</span><span style="color:#24292E;"> </span><span style="color:#032F62;">enable</span><span style="color:#24292E;"> </span><span style="color:#032F62;">rabbitmq_management</span></span></code></pre></div><p>插件安装完成在浏览器中输入：<code>http://localhost:15672</code> 查看 输入用户名：<strong>guest</strong>，密码：<strong>guest</strong><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513125213.png" alt=""><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513125314.png" alt=""></p><h2 id="springboot-使用rabbit-服务" tabindex="-1">SpringBoot 使用Rabbit 服务 <a class="header-anchor" href="#springboot-使用rabbit-服务" aria-label="Permalink to &quot;SpringBoot 使用Rabbit 服务&quot;">​</a></h2><h3 id="使用依赖" tabindex="-1">使用依赖 <a class="header-anchor" href="#使用依赖" aria-label="Permalink to &quot;使用依赖&quot;">​</a></h3><p>这个依赖是SpringBoot 自己集成好的，引入直接用就可以了</p><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-amqp&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-amqp&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><blockquote><p>配置RabbitMQ</p></blockquote><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#85E89D;">spring</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">rabbitmq</span><span style="color:#E1E4E8;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">host</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">127.0.0.1</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">port</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">5672</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">username</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">guest</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">password</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">guest</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#85E89D;">virtual-host</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">/</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#22863A;">spring</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">rabbitmq</span><span style="color:#24292E;">:</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">host</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">127.0.0.1</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">port</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">5672</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">username</span><span style="color:#24292E;">: </span><span style="color:#032F62;">guest</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">password</span><span style="color:#24292E;">: </span><span style="color:#032F62;">guest</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#22863A;">virtual-host</span><span style="color:#24292E;">: </span><span style="color:#032F62;">/</span></span></code></pre></div><h3 id="api-方式整合-rabbitmq" tabindex="-1">API 方式整合 RabbitMQ <a class="header-anchor" href="#api-方式整合-rabbitmq" aria-label="Permalink to &quot;API 方式整合 RabbitMQ&quot;">​</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RunWith</span><span style="color:#E1E4E8;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">SpringBootTest</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitMQTest</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// API 方式</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  AmqpAdmin amqpAdmin;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Test</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">amqpAdminTest</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 定义信息</span></span>
<span class="line"><span style="color:#E1E4E8;">  String ExangeName </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout_exchange&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">  List&lt;</span><span style="color:#F97583;">String</span><span style="color:#E1E4E8;">&gt; MsgQueues </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#E1E4E8;">  MsgQueues.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_email&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  MsgQueues.</span><span style="color:#B392F0;">add</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_sms&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 定义 fanout 类型交换器，（用户发送数据经交换机分发，进入不同的消息队列）</span></span>
<span class="line"><span style="color:#E1E4E8;">  amqpAdmin.</span><span style="color:#B392F0;">declareExchange</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">FanoutExchange</span><span style="color:#E1E4E8;">(ExangeName));</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 定义两个消息队列，用于接收交换机分发的数据</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (String queue </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> MsgQueues) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    amqpAdmin.</span><span style="color:#B392F0;">declareQueue</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Queue</span><span style="color:#E1E4E8;">(queue));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 将消息队列绑定到交换机中</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (String queue </span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> MsgQueues) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    amqpAdmin.</span><span style="color:#B392F0;">declareBinding</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Binding</span><span style="color:#E1E4E8;">(queue, Binding.DestinationType.QUEUE, ExangeName, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RunWith</span><span style="color:#24292E;">(SpringRunner.class)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">SpringBootTest</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitMQTest</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// API 方式</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  AmqpAdmin amqpAdmin;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">amqpAdminTest</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 定义信息</span></span>
<span class="line"><span style="color:#24292E;">  String ExangeName </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout_exchange&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">  List&lt;</span><span style="color:#D73A49;">String</span><span style="color:#24292E;">&gt; MsgQueues </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> LinkedList&lt;&gt;();</span></span>
<span class="line"><span style="color:#24292E;">  MsgQueues.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_email&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  MsgQueues.</span><span style="color:#6F42C1;">add</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_sms&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 定义 fanout 类型交换器，（用户发送数据经交换机分发，进入不同的消息队列）</span></span>
<span class="line"><span style="color:#24292E;">  amqpAdmin.</span><span style="color:#6F42C1;">declareExchange</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">FanoutExchange</span><span style="color:#24292E;">(ExangeName));</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 定义两个消息队列，用于接收交换机分发的数据</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (String queue </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> MsgQueues) {</span></span>
<span class="line"><span style="color:#24292E;">    amqpAdmin.</span><span style="color:#6F42C1;">declareQueue</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Queue</span><span style="color:#24292E;">(queue));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 将消息队列绑定到交换机中</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (String queue </span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> MsgQueues) {</span></span>
<span class="line"><span style="color:#24292E;">    amqpAdmin.</span><span style="color:#6F42C1;">declareBinding</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Binding</span><span style="color:#24292E;">(queue, Binding.DestinationType.QUEUE, ExangeName, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>运行一下，打开浏览器访问可视化窗口，增加了一个交换器，也会增加两个消息队列 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513130858.png" alt=""><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513130959.png" alt=""></p><blockquote><p>创建一个发送的数据类</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitUser</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String username;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitUser</span><span style="color:#E1E4E8;">() {}</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitUser</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">, String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.id </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">this</span><span style="color:#E1E4E8;">.username </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> username;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 省去get/set 和 toString方法</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitUser</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer id;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String username;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitUser</span><span style="color:#24292E;">() {}</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitUser</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">id</span><span style="color:#24292E;">, String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.id </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> id;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">this</span><span style="color:#24292E;">.username </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> username;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 省去get/set 和 toString方法</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>测试消息</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> RabbitTemplate rabbitTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Test</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">publishSubscribe</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 发送消息</span></span>
<span class="line"><span style="color:#E1E4E8;">  RabbitUser rabbitUser </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitUser</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;admin&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// rabbitmq 发送字符串或者 bite 类型</span></span>
<span class="line"><span style="color:#E1E4E8;">  rabbitTemplate.</span><span style="color:#B392F0;">convertAndSend</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_exchange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">, rabbitUser.</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#D73A49;">private</span><span style="color:#24292E;"> RabbitTemplate rabbitTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Test</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">publishSubscribe</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 发送消息</span></span>
<span class="line"><span style="color:#24292E;">  RabbitUser rabbitUser </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitUser</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;admin&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// rabbitmq 发送字符串或者 bite 类型</span></span>
<span class="line"><span style="color:#24292E;">  rabbitTemplate.</span><span style="color:#6F42C1;">convertAndSend</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_exchange&quot;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">, rabbitUser.</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>自定义类型消息类型，避免乱码</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Configuration</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitMQConfig</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> MessageConverter </span><span style="color:#B392F0;">messageConverter</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Jackson2JsonMessageConverter</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Configuration</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitMQConfig</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> MessageConverter </span><span style="color:#6F42C1;">messageConverter</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Jackson2JsonMessageConverter</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>运行 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513135933.png" alt=""></p><blockquote><p>获取发送的消息信息</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">RabbitMQService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 接收邮件</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">RabbitListener</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">queues</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout_queue_email&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">psubConsumerEmail</span><span style="color:#E1E4E8;">(Message </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;MsgAllInfo:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> message);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 接收短信</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">RabbitListener</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">queues</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout_queue_sms&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">psubConsumerSms</span><span style="color:#E1E4E8;">(Message </span><span style="color:#FFAB70;">message</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  String s </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">String</span><span style="color:#E1E4E8;">(message.</span><span style="color:#B392F0;">getBody</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sms: &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> s);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">RabbitMQService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 接收邮件</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">RabbitListener</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">queues</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout_queue_email&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">psubConsumerEmail</span><span style="color:#24292E;">(Message </span><span style="color:#E36209;">message</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;MsgAllInfo:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> message);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 接收短信</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">RabbitListener</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">queues</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout_queue_sms&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">psubConsumerSms</span><span style="color:#24292E;">(Message </span><span style="color:#E36209;">message</span><span style="color:#24292E;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  String s </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">String</span><span style="color:#24292E;">(message.</span><span style="color:#6F42C1;">getBody</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sms: &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> s);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h3 id="运行" tabindex="-1">运行 <a class="header-anchor" href="#运行" aria-label="Permalink to &quot;运行&quot;">​</a></h3><blockquote><p>控制台打印结果 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513164607.png" alt=""> 可视化面板结果 <img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220513164650.png" alt=""></p></blockquote><h3 id="基于注解" tabindex="-1">基于注解 <a class="header-anchor" href="#基于注解" aria-label="Permalink to &quot;基于注解&quot;">​</a></h3><p>在RabbitConfig 类中添加配置</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Exchange </span><span style="color:#B392F0;">fanout_exchange</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> ExchangeBuilder.</span><span style="color:#B392F0;">fanoutExchange</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_exchange&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Queue </span><span style="color:#B392F0;">fanout_queue_email</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Queue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_email&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Queue </span><span style="color:#B392F0;">fanout_queue_sms</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Queue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_sms&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Binding </span><span style="color:#B392F0;">bindingEmail</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> BindingBuilder.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">fanout_queue_email</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">fanout_exchange</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">noargs</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Bean</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Binding </span><span style="color:#B392F0;">bindingSms</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> BindingBuilder.</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">fanout_queue_sms</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">to</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">fanout_exchange</span><span style="color:#E1E4E8;">()).</span><span style="color:#B392F0;">with</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">noargs</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Exchange </span><span style="color:#6F42C1;">fanout_exchange</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> ExchangeBuilder.</span><span style="color:#6F42C1;">fanoutExchange</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_exchange&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Queue </span><span style="color:#6F42C1;">fanout_queue_email</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Queue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_email&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Queue </span><span style="color:#6F42C1;">fanout_queue_sms</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Queue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_sms&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Binding </span><span style="color:#6F42C1;">bindingEmail</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> BindingBuilder.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fanout_queue_email</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fanout_exchange</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">noargs</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Bean</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Binding </span><span style="color:#6F42C1;">bindingSms</span><span style="color:#24292E;">() {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> BindingBuilder.</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fanout_queue_sms</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">to</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">fanout_exchange</span><span style="color:#24292E;">()).</span><span style="color:#6F42C1;">with</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">noargs</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>接受处理方法</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RabbitListener</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">bindings</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">QueueBinding</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Queue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_email&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">exchange</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Exchange</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout_exchange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout&quot;</span><span style="color:#E1E4E8;">)))</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">psubConsumerEmail</span><span style="color:#E1E4E8;">(RabbitUser user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Email:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> user);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">RabbitListener</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">bindings</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">QueueBinding</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Queue</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;fanout_queue_sms&quot;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">           </span><span style="color:#79B8FF;">exchange</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> @</span><span style="color:#F97583;">Exchange</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout_exchange&quot;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;fanout&quot;</span><span style="color:#E1E4E8;">)))</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">psubConsumerSms</span><span style="color:#E1E4E8;">(RabbitUser user) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;Sms:&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> user);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RabbitListener</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">bindings</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">QueueBinding</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Queue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_email&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">exchange</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Exchange</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout_exchange&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout&quot;</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">psubConsumerEmail</span><span style="color:#24292E;">(RabbitUser user) {</span></span>
<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Email:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> user);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">RabbitListener</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">bindings</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">QueueBinding</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Queue</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;fanout_queue_sms&quot;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">           </span><span style="color:#005CC5;">exchange</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> @</span><span style="color:#D73A49;">Exchange</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout_exchange&quot;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">type</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;fanout&quot;</span><span style="color:#24292E;">)))</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">psubConsumerSms</span><span style="color:#24292E;">(RabbitUser user) {</span></span>
<span class="line"><span style="color:#24292E;">  System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;Sms:&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> user);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,38);function F(g,d,m,h,q,C){const e=o("el-divider"),a=o("el-tag");return E(),c("div",null,[i,s(e),p("div",u,[s(a,null,{default:l(()=>[n("java")]),_:1}),s(a,null,{default:l(()=>[n("SpringBoot")]),_:1}),s(a,null,{default:l(()=>[n("RabbitMQ")]),_:1})]),b])}const v=t(y,[["render",F]]);export{B as __pageData,v as default};
