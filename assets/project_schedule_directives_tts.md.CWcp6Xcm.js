import{av as e,p as t,m as s,aR as a}from"./chunks/framework.7WxYM5Sz.js";const _=JSON.parse('{"title":"description","description":"","frontmatter":{"layout":"doc","title":"description"},"headers":[],"relativePath":"project/schedule/directives/tts.md","filePath":"project/schedule/directives/tts.md","lastUpdated":1702524439000}'),i={name:"project/schedule/directives/tts.md"},r=a(`<h1 id="tts" tabindex="-1">tts <a class="header-anchor" href="#tts" aria-label="Permalink to &quot;tts&quot;">​</a></h1><p>text-to-speech: Convert a piece of text to speech</p><h2 id="parameter" tabindex="-1">parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter&quot;">​</a></h2><p><code>text</code>: Text to be converted to speech, if this directive follows another instruction, Convert the result of the previous directive run. You can also use the placeholder <code>$1</code> to concatenate with the previous command to convert text to speech</p><h2 id="the-directive-result" tabindex="-1">the directive result <a class="header-anchor" href="#the-directive-result" aria-label="Permalink to &quot;the directive result&quot;">​</a></h2><div class="language-json vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;data&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,6),n=[r];function o(c,l,p,d,h,u){return s(),t("div",null,n)}const v=e(i,[["render",o]]);export{_ as __pageData,v as default};
