import{_ as t,C as o,c as r,H as s,k as p,w as l,a as n,Q as c,o as E}from"./chunks/framework.b0840c63.js";const b=JSON.parse('{"title":"SpringBoot 用户安全访问","description":"","frontmatter":{"title":"SpringBoot 用户安全访问","layout":"doc"},"headers":[],"relativePath":"blogs/java/springboot-security.md","filePath":"blogs/java/springboot-security.md","lastUpdated":1698109494000}'),y={name:"blogs/java/springboot-security.md"},i=p("h1",{id:"springboot-用户安全访问",tabindex:"-1"},[n("SpringBoot 用户安全访问 "),p("a",{class:"header-anchor",href:"#springboot-用户安全访问","aria-label":'Permalink to "SpringBoot 用户安全访问"'},"​")],-1),F={style:{display:"flex",gap:"10px"}},u=c(`<h2 id="用户安全访问" tabindex="-1">用户安全访问 <a class="header-anchor" href="#用户安全访问" aria-label="Permalink to &quot;用户安全访问&quot;">​</a></h2><blockquote><p>区分用户权限，不同的用户赋予不同的访问管理权限，使管理更高效</p></blockquote><p>SpringBoot中共有三种安全访问机制：</p><ol><li>内存安全认证</li><li>jdbc安全认证</li><li>UserDetailsService 安全认证</li></ol><h3 id="使用的依赖" tabindex="-1">使用的依赖 <a class="header-anchor" href="#使用的依赖" aria-label="Permalink to &quot;使用的依赖&quot;">​</a></h3><div class="language-xml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">xml</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">&lt;!--    安全管理--&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;org.springframework.boot&lt;/</span><span style="color:#85E89D;">groupId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  &lt;</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;spring-boot-starter-security&lt;/</span><span style="color:#85E89D;">artifactId</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">dependency</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">&lt;!--    安全管理--&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;org.springframework.boot&lt;/</span><span style="color:#22863A;">groupId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">  &lt;</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;spring-boot-starter-security&lt;/</span><span style="color:#22863A;">artifactId</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">dependency</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>数据库中一定要有三个数据库表:<code>t_customer</code>、<code>t_authority</code>、<code>t_customer_authority</code> 分别是用户表，用户权限表，用户与用户权限对应表</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">-- 用户表</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">t_customer</span><span style="color:#E1E4E8;">\` (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`username\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`password\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">200</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`valid\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TINYINT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">INNODB AUTO_INCREMENT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> CHARSET</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 权限表</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_authority\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">t_authority</span><span style="color:#E1E4E8;">\` (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`authority\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VARCHAR</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">INNODB AUTO_INCREMENT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> CHARSET</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 用户与权限对应关系</span></span>
<span class="line"><span style="color:#F97583;">DROP</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">IF</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">EXISTS</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer_authority\`</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">CREATE</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">TABLE</span><span style="color:#E1E4E8;"> \`</span><span style="color:#B392F0;">t_customer_authority</span><span style="color:#E1E4E8;">\` (</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">NOT NULL</span><span style="color:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`customer_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#9ECBFF;">\`authority_id\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">INT</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">NULL</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">PRIMARY KEY</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">\`id\`</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">) ENGINE</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">INNODB AUTO_INCREMENT</span><span style="color:#F97583;">=</span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">DEFAULT</span><span style="color:#E1E4E8;"> CHARSET</span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 插入一些数据</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;admin&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;shitou&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;3&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;李四&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_authority\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;common&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_authority\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;vip&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer_authority\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;1&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">INSERT INTO</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">\`t_customer_authority\`</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">VALUES</span><span style="color:#E1E4E8;"> (</span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;2&#39;</span><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">-- 用户表</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">t_customer</span><span style="color:#24292E;">\` (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`username\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`password\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">200</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`valid\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TINYINT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INNODB AUTO_INCREMENT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> CHARSET</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 权限表</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_authority\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">t_authority</span><span style="color:#24292E;">\` (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`authority\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VARCHAR</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INNODB AUTO_INCREMENT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> CHARSET</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 用户与权限对应关系</span></span>
<span class="line"><span style="color:#D73A49;">DROP</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">IF</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">EXISTS</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer_authority\`</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">CREATE</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">TABLE</span><span style="color:#24292E;"> \`</span><span style="color:#6F42C1;">t_customer_authority</span><span style="color:#24292E;">\` (</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">NOT NULL</span><span style="color:#24292E;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`customer_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#032F62;">\`authority_id\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">INT</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">NULL</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">PRIMARY KEY</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">\`id\`</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">) ENGINE</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">INNODB AUTO_INCREMENT</span><span style="color:#D73A49;">=</span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">DEFAULT</span><span style="color:#24292E;"> CHARSET</span><span style="color:#D73A49;">=</span><span style="color:#24292E;">utf8;</span></span>
<span class="line"><span style="color:#6A737D;">-- 插入一些数据</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;admin&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;shitou&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;3&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;李四&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;$2a$10$5ooQI8dir8jv0/gCa1Six.GpzAdIPf6pMqdminZ/3ijYzivCyPlfK&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_authority\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;common&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_authority\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;vip&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer_authority\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;1&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">INSERT INTO</span><span style="color:#24292E;"> </span><span style="color:#032F62;">\`t_customer_authority\`</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">VALUES</span><span style="color:#24292E;"> (</span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;2&#39;</span><span style="color:#24292E;">);</span></span></code></pre></div><h2 id="创建实体类" tabindex="-1">创建实体类 <a class="header-anchor" href="#创建实体类" aria-label="Permalink to &quot;创建实体类&quot;">​</a></h2><blockquote><p>客户实体类</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Entity</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;t_customer&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Customer</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Id</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">GeneratedValue</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">strategy</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> GenerationType.IDENTITY)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer id;</span></span>
<span class="line"><span style="color:#6A737D;">  /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 客户用户名</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String username;</span></span>
<span class="line"><span style="color:#6A737D;">  /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 客户密码</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String password;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Entity</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;t_customer&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Customer</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Id</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">GeneratedValue</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">strategy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> GenerationType.IDENTITY)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer id;</span></span>
<span class="line"><span style="color:#6A737D;">  /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 客户用户名</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String username;</span></span>
<span class="line"><span style="color:#6A737D;">  /**</span></span>
<span class="line"><span style="color:#6A737D;">   * 客户密码</span></span>
<span class="line"><span style="color:#6A737D;">   */</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String password;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>权限实体类</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Entity</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">name</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;t_authority&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Data</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Authority</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Id</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">GeneratedValue</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">strategy</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> GenerationType.IDENTITY)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> Integer id;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> String authority ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Entity</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">name</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;t_authority&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Data</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Authority</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Id</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">GeneratedValue</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">strategy</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> GenerationType.IDENTITY)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> Integer id;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> String authority ;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="创建repository-接口-管理业务语句" tabindex="-1">创建Repository 接口 管理业务语句 <a class="header-anchor" href="#创建repository-接口-管理业务语句" aria-label="Permalink to &quot;创建Repository 接口 管理业务语句&quot;">​</a></h2><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CustomerRepository</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JpaRepository</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Customer</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Query</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;select id from t_customer&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">nativeQuery</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">Customer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">getAllUser</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Customer </span><span style="color:#B392F0;">findByUsername</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">existsCustomerByIdAndUsername</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">,String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">Customer</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">getCustomerByIdAndUsername</span><span style="color:#E1E4E8;">(Integer </span><span style="color:#FFAB70;">id</span><span style="color:#E1E4E8;">,String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AuthorityRepository</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">JpaRepository</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#F97583;">Authority</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">Integer</span><span style="color:#E1E4E8;">&gt; {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Query</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;select a.* from t_customer c,t_authority a,t_customer_authority ca where ca.customer_id=c.id and ca.authority_id=a.id and c.username =?1&quot;</span><span style="color:#E1E4E8;">,</span><span style="color:#79B8FF;">nativeQuery</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">Authority</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">findAuthoritiesByUsername</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CustomerRepository</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JpaRepository</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Customer</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Query</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;select id from t_customer&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">nativeQuery</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Customer</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getAllUser</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Customer </span><span style="color:#6F42C1;">findByUsername</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">existsCustomerByIdAndUsername</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">id</span><span style="color:#24292E;">,String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Customer</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getCustomerByIdAndUsername</span><span style="color:#24292E;">(Integer </span><span style="color:#E36209;">id</span><span style="color:#24292E;">,String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AuthorityRepository</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">JpaRepository</span><span style="color:#24292E;">&lt;</span><span style="color:#D73A49;">Authority</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">Integer</span><span style="color:#24292E;">&gt; {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Query</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;select a.* from t_customer c,t_authority a,t_customer_authority ca where ca.customer_id=c.id and ca.authority_id=a.id and c.username =?1&quot;</span><span style="color:#24292E;">,</span><span style="color:#005CC5;">nativeQuery</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Authority</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">findAuthoritiesByUsername</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220508001152.png" alt=""></p><blockquote><p>客户信息管理CustomerService</p></blockquote><p><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220508001454.png" alt=""></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">Service</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">CustomerService</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> CustomerRepository customerRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> AuthorityRepository authorityRepository;</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> RedisTemplate redisTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> Customer </span><span style="color:#B392F0;">getCustomer</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    Customer customer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    Object o </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redisTemplate.</span><span style="color:#B392F0;">opsForValue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;customer_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> username);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (o </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      customer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (Customer) o;</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      customer </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> customerRepository.</span><span style="color:#B392F0;">findByUsername</span><span style="color:#E1E4E8;">(username);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (customer </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        redisTemplate.</span><span style="color:#B392F0;">opsForValue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;customer_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> username, customer);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> customer;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> List&lt;</span><span style="color:#F97583;">Authority</span><span style="color:#E1E4E8;">&gt; </span><span style="color:#B392F0;">getCustomerAuthority</span><span style="color:#E1E4E8;">(String </span><span style="color:#FFAB70;">username</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    List&lt;</span><span style="color:#F97583;">Authority</span><span style="color:#E1E4E8;">&gt; authorities </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    Object o </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> redisTemplate.</span><span style="color:#B392F0;">opsForValue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;authorities_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> username);</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (o </span><span style="color:#F97583;">!=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      authorities </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> (List</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">Authority</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">) o;</span></span>
<span class="line"><span style="color:#E1E4E8;">    } </span><span style="color:#F97583;">else</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      authorities </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> authorityRepository.</span><span style="color:#B392F0;">findAuthoritiesByUsername</span><span style="color:#E1E4E8;">(username);</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (authorities.</span><span style="color:#B392F0;">size</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        redisTemplate.</span><span style="color:#B392F0;">opsForValue</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">set</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;authorities_&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> username, authorities);</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> authorities;</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">Service</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">CustomerService</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> CustomerRepository customerRepository;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> AuthorityRepository authorityRepository;</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> RedisTemplate redisTemplate;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> Customer </span><span style="color:#6F42C1;">getCustomer</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    Customer customer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    Object o </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redisTemplate.</span><span style="color:#6F42C1;">opsForValue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;customer_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> username);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (o </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      customer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (Customer) o;</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      customer </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> customerRepository.</span><span style="color:#6F42C1;">findByUsername</span><span style="color:#24292E;">(username);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (customer </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        redisTemplate.</span><span style="color:#6F42C1;">opsForValue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;customer_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> username, customer);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> customer;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">public</span><span style="color:#24292E;"> List&lt;</span><span style="color:#D73A49;">Authority</span><span style="color:#24292E;">&gt; </span><span style="color:#6F42C1;">getCustomerAuthority</span><span style="color:#24292E;">(String </span><span style="color:#E36209;">username</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    List&lt;</span><span style="color:#D73A49;">Authority</span><span style="color:#24292E;">&gt; authorities </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    Object o </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> redisTemplate.</span><span style="color:#6F42C1;">opsForValue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;authorities_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> username);</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (o </span><span style="color:#D73A49;">!=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      authorities </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> (List</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">Authority</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">) o;</span></span>
<span class="line"><span style="color:#24292E;">    } </span><span style="color:#D73A49;">else</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">      authorities </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> authorityRepository.</span><span style="color:#6F42C1;">findAuthoritiesByUsername</span><span style="color:#24292E;">(username);</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (authorities.</span><span style="color:#6F42C1;">size</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">        redisTemplate.</span><span style="color:#6F42C1;">opsForValue</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">set</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;authorities_&quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span><span style="color:#24292E;"> username, authorities);</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> authorities;</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="enablewebsecurity-开启安全模式" tabindex="-1"><code>@EnableWebSecurity</code> 开启安全模式 <a class="header-anchor" href="#enablewebsecurity-开启安全模式" aria-label="Permalink to &quot;\`@EnableWebSecurity\` 开启安全模式&quot;">​</a></h2><blockquote><p>内存安全管理模式</p></blockquote><p><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220508001752.png" alt=""></p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SecurityConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSecurityConfigurerAdapter</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 内存认证</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">configure</span><span style="color:#E1E4E8;">(AuthenticationManagerBuilder </span><span style="color:#FFAB70;">auth</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">//    加密方式</span></span>
<span class="line"><span style="color:#E1E4E8;">    BCryptPasswordEncoder bCryptPasswordEncoder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BCryptPasswordEncoder</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 写死的账号密码，</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 用户名 shitou 密码 123456 权限 为 common</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 用户名 李四 密码 123456 权限为 vip</span></span>
<span class="line"><span style="color:#E1E4E8;">    auth.</span><span style="color:#B392F0;">inMemoryAuthentication</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">passwordEncoder</span><span style="color:#E1E4E8;">(bCryptPasswordEncoder)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">withUser</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;li&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">password</span><span style="color:#E1E4E8;">(bCryptPasswordEncoder.</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;111111&quot;</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">roles</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;common&quot;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">and</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">withUser</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;李四&quot;</span><span style="color:#E1E4E8;">).</span><span style="color:#B392F0;">password</span><span style="color:#E1E4E8;">(bCryptPasswordEncoder.</span><span style="color:#B392F0;">encode</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;222222&quot;</span><span style="color:#E1E4E8;">)).</span><span style="color:#B392F0;">roles</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;vip&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SecurityConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSecurityConfigurerAdapter</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 内存认证</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(AuthenticationManagerBuilder </span><span style="color:#E36209;">auth</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">//    加密方式</span></span>
<span class="line"><span style="color:#24292E;">    BCryptPasswordEncoder bCryptPasswordEncoder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BCryptPasswordEncoder</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 写死的账号密码，</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 用户名 shitou 密码 123456 权限 为 common</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 用户名 李四 密码 123456 权限为 vip</span></span>
<span class="line"><span style="color:#24292E;">    auth.</span><span style="color:#6F42C1;">inMemoryAuthentication</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">passwordEncoder</span><span style="color:#24292E;">(bCryptPasswordEncoder)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">withUser</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;li&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">password</span><span style="color:#24292E;">(bCryptPasswordEncoder.</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;111111&quot;</span><span style="color:#24292E;">)).</span><span style="color:#6F42C1;">roles</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;common&quot;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">and</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">withUser</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;李四&quot;</span><span style="color:#24292E;">).</span><span style="color:#6F42C1;">password</span><span style="color:#24292E;">(bCryptPasswordEncoder.</span><span style="color:#6F42C1;">encode</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;222222&quot;</span><span style="color:#24292E;">)).</span><span style="color:#6F42C1;">roles</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;vip&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>JDBC 数据库安全身份认证模式</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SecurityConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSecurityConfigurerAdapter</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> DataSource dataSource;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// 数据库认证方式</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">configure</span><span style="color:#E1E4E8;">(AuthenticationManagerBuilder </span><span style="color:#FFAB70;">auth</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="color:#E1E4E8;">    BCryptPasswordEncoder encoder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BCryptPasswordEncoder</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 查询用户的语句</span></span>
<span class="line"><span style="color:#E1E4E8;">    String us </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;select username,password,valid from t_customer where username=?&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 查询 用户名以及用户权限的语句</span></span>
<span class="line"><span style="color:#E1E4E8;">    String as </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;select c.username,a.authority from t_customer c, t_authority a, t_customer_authority ca &quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">+</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&quot;where ca.customer_id=c.id and ca.authority_id=a.id and c.username=?&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// 设置 用户校验规则为 encoder 数据库源为 dataSource 设置查询用户语句，查询权限语句</span></span>
<span class="line"><span style="color:#E1E4E8;">    auth.</span><span style="color:#B392F0;">jdbcAuthentication</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">passwordEncoder</span><span style="color:#E1E4E8;">(encoder)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">dataSource</span><span style="color:#E1E4E8;">(dataSource)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">usersByUsernameQuery</span><span style="color:#E1E4E8;">(us)</span></span>
<span class="line"><span style="color:#E1E4E8;">        .</span><span style="color:#B392F0;">authoritiesByUsernameQuery</span><span style="color:#E1E4E8;">(as);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SecurityConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSecurityConfigurerAdapter</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> DataSource dataSource;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// 数据库认证方式</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(AuthenticationManagerBuilder </span><span style="color:#E36209;">auth</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">    BCryptPasswordEncoder encoder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BCryptPasswordEncoder</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 查询用户的语句</span></span>
<span class="line"><span style="color:#24292E;">    String us </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;select username,password,valid from t_customer where username=?&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 查询 用户名以及用户权限的语句</span></span>
<span class="line"><span style="color:#24292E;">    String as </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;select c.username,a.authority from t_customer c, t_authority a, t_customer_authority ca &quot;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">+</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&quot;where ca.customer_id=c.id and ca.authority_id=a.id and c.username=?&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// 设置 用户校验规则为 encoder 数据库源为 dataSource 设置查询用户语句，查询权限语句</span></span>
<span class="line"><span style="color:#24292E;">    auth.</span><span style="color:#6F42C1;">jdbcAuthentication</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">passwordEncoder</span><span style="color:#24292E;">(encoder)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">dataSource</span><span style="color:#24292E;">(dataSource)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">usersByUsernameQuery</span><span style="color:#24292E;">(us)</span></span>
<span class="line"><span style="color:#24292E;">        .</span><span style="color:#6F42C1;">authoritiesByUsernameQuery</span><span style="color:#24292E;">(as);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>UserDetailService 数据库安全身份认证模式</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">@</span><span style="color:#F97583;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">SecurityConfig</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">WebSecurityConfigurerAdapter</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#6A737D;">// UserDetailsService 安全认证</span></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Autowired</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">private</span><span style="color:#E1E4E8;"> UserDetailsServiceImpl userDetailsService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">  @</span><span style="color:#F97583;">Override</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">void</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">configure</span><span style="color:#E1E4E8;">(AuthenticationManagerBuilder </span><span style="color:#FFAB70;">auth</span><span style="color:#E1E4E8;">) </span><span style="color:#F97583;">throws</span><span style="color:#E1E4E8;"> Exception {</span></span>
<span class="line"><span style="color:#E1E4E8;">    System.out.</span><span style="color:#B392F0;">println</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;UserDetailService 身份验证&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    BCryptPasswordEncoder encoder </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BCryptPasswordEncoder</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">    auth.</span><span style="color:#B392F0;">userDetailsService</span><span style="color:#E1E4E8;">(userDetailsService).</span><span style="color:#B392F0;">passwordEncoder</span><span style="color:#E1E4E8;">(encoder);</span></span>
<span class="line"><span style="color:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">@</span><span style="color:#D73A49;">EnableWebSecurity</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">SecurityConfig</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">WebSecurityConfigurerAdapter</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6A737D;">// UserDetailsService 安全认证</span></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Autowired</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">private</span><span style="color:#24292E;"> UserDetailsServiceImpl userDetailsService;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">  @</span><span style="color:#D73A49;">Override</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">void</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">configure</span><span style="color:#24292E;">(AuthenticationManagerBuilder </span><span style="color:#E36209;">auth</span><span style="color:#24292E;">) </span><span style="color:#D73A49;">throws</span><span style="color:#24292E;"> Exception {</span></span>
<span class="line"><span style="color:#24292E;">    System.out.</span><span style="color:#6F42C1;">println</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;UserDetailService 身份验证&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    BCryptPasswordEncoder encoder </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BCryptPasswordEncoder</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">    auth.</span><span style="color:#6F42C1;">userDetailsService</span><span style="color:#24292E;">(userDetailsService).</span><span style="color:#6F42C1;">passwordEncoder</span><span style="color:#24292E;">(encoder);</span></span>
<span class="line"><span style="color:#24292E;">  }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="浏览器访问本地地址即可-自动跳转到login页面" tabindex="-1">浏览器访问本地地址即可，自动跳转到login页面 <a class="header-anchor" href="#浏览器访问本地地址即可-自动跳转到login页面" aria-label="Permalink to &quot;浏览器访问本地地址即可，自动跳转到login页面&quot;">​</a></h2><p><img src="https://raw.githubusercontent.com/xing403/images-repo/main/assets/website/20220507231215.png" alt=""> 这里的login页面是身份安全认证自己默认的，并不是自己创建的使用<code>@Controller</code> 跳转的login.html页面</p>`,29);function d(A,C,D,m,h,g){const e=o("el-divider"),a=o("el-tag");return E(),r("div",null,[i,s(e),p("div",F,[s(a,null,{default:l(()=>[n("java")]),_:1}),s(a,null,{default:l(()=>[n("springboot")]),_:1}),s(a,null,{default:l(()=>[n("security")]),_:1})]),u])}const v=t(y,[["render",d]]);export{b as __pageData,v as default};
