import{av as e,p as s,m as i,aR as a,b0 as n,b1 as t,b2 as l}from"./chunks/framework.7WxYM5Sz.js";const _=JSON.parse('{"title":"introduction","description":"","frontmatter":{"layout":"doc","title":"introduction"},"headers":[],"relativePath":"project/schedule/introduction.md","filePath":"project/schedule/introduction.md","lastUpdated":1702524439000}'),o={name:"project/schedule/introduction.md"},r=a('<div align="center"><img src="'+n+'" align="center" width="200"></div><h3 align="center">Schedule</h3><p>A Schedule Tools, You can create a scheduled task by using the cron string</p><blockquote><p>home</p></blockquote><p><img src="'+t+'" alt="index page"></p><blockquote><p>create schedule</p></blockquote><p><img src="'+l+`" alt="index page"></p><h2 id="schedule-directive" tabindex="-1">Schedule directive <a class="header-anchor" href="#schedule-directive" aria-label="Permalink to &quot;Schedule directive&quot;">​</a></h2><p>You can select part of the instructions, combine and sort, to achieve the effect you want. For example, by the combination of <code>date-time</code> and <code>notification</code> two directives, set to execute once an hour, then you get an instruction that will ring every hour. If you are a fan of the Internet of Things (IOT) and have built-in MQTT messaging service, you only need to configure your own MQTT service to send MQTT content on a regular basis. more directive see <a href="/project/schedule/directives/description.html"> here </a></p><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><blockquote><p>need</p></blockquote><ul><li>node &gt;= 16.*</li><li>typescript &gt;= 5.1.3</li><li>pnpm &gt;= 8.6.0</li></ul><div class="language-sh vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># install dependencies</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> i</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># run</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dev</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,13),c=[r];function p(d,h,u,k,m,g){return i(),s("div",null,c)}const v=e(o,[["render",p]]);export{_ as __pageData,v as default};
