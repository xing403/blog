import{_ as t,H as e,c,J as s,C as o,E as l,a,V as r,o as i}from"./chunks/framework.6db0e9f3.js";const E=JSON.parse('{"title":"GitHub pages2","description":"","frontmatter":{"title":"GitHub pages2","layout":"doc"},"headers":[],"relativePath":"blogs/github/pages2.md","filePath":"blogs/github/pages2.md","lastUpdated":1696985159000}'),y={name:"blogs/github/pages2.md"},C=o("h1",{id:"github-pages2",tabindex:"-1"},[a("GitHub pages2 "),o("a",{class:"header-anchor",href:"#github-pages2","aria-label":'Permalink to "GitHub pages2"'},"​")],-1),d={style:{display:"flex",gap:"10px"}},D=r(`<blockquote><p>第二种配置自动部署方式</p></blockquote><h2 id="_1-创建新仓库" tabindex="-1">1. 创建新仓库 <a class="header-anchor" href="#_1-创建新仓库" aria-label="Permalink to &quot;1. 创建新仓库&quot;">​</a></h2><ol><li>创建一个新的仓库放置打包的文件</li></ol><blockquote><p>将仓库命名为 <code>&lt;username&gt;.github.io</code> -username 为用户名</p></blockquote><h2 id="_2-配置脚本" tabindex="-1">2. 配置脚本 <a class="header-anchor" href="#_2-配置脚本" aria-label="Permalink to &quot;2. 配置脚本&quot;">​</a></h2><p>在项目的根目录下 deploy.sh 文件中添加如下脚本</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">#!/usr/bin/env sh</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 打包项目</span></span>
<span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docs:build</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 切换到dist目录</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.vitepress/dist/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将打包文件提交到新仓库中</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">init</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">add</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">commit</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-m</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deploy</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">push</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">git@github.com:xing403/xing403.github.io.git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">master</span></span></code></pre></div><h2 id="_3-配置script-命令" tabindex="-1">3. 配置script 命令 <a class="header-anchor" href="#_3-配置script-命令" aria-label="Permalink to &quot;3. 配置script 命令&quot;">​</a></h2><p>在 package.json 文件中添加如下命令</p><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">scripts</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">deploy:github</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">deploy.sh</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="_4-本地执行" tabindex="-1">4. 本地执行 <a class="header-anchor" href="#_4-本地执行" aria-label="Permalink to &quot;4. 本地执行&quot;">​</a></h2><p>在项目根目录下执行</p><div class="language-sh"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">pnpm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">deploy:github</span></span></code></pre></div>`,13);function u(h,g,_,A,F,b){const p=e("el-divider"),n=e("el-tag");return i(),c("div",null,[C,s(p),o("div",d,[s(n,null,{default:l(()=>[a("github")]),_:1}),s(n,null,{default:l(()=>[a("pages")]),_:1}),s(n,null,{default:l(()=>[a("tools")]),_:1}),s(n,null,{default:l(()=>[a("automation")]),_:1})]),D])}const f=t(y,[["render",u]]);export{E as __pageData,f as default};
