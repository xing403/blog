import{_ as e,c as t,o as s,Q as a}from"./chunks/framework.b0840c63.js";const v=JSON.parse('{"title":"description","description":"","frontmatter":{"layout":"doc","title":"description"},"headers":[],"relativePath":"project/schedule/directives/tts.md","filePath":"project/schedule/directives/tts.md","lastUpdated":1702524439000}'),o={name:"project/schedule/directives/tts.md"},n=a(`<h1 id="tts" tabindex="-1">tts <a class="header-anchor" href="#tts" aria-label="Permalink to &quot;tts&quot;">​</a></h1><p>text-to-speech: Convert a piece of text to speech</p><h2 id="parameter" tabindex="-1">parameter <a class="header-anchor" href="#parameter" aria-label="Permalink to &quot;parameter&quot;">​</a></h2><p><code>text</code>: Text to be converted to speech, if this directive follows another instruction, Convert the result of the previous directive run. You can also use the placeholder <code>$1</code> to concatenate with the previous command to convert text to speech</p><h2 id="the-directive-result" tabindex="-1">the directive result <a class="header-anchor" href="#the-directive-result" aria-label="Permalink to &quot;the directive result&quot;">​</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#79B8FF;">&quot;data&quot;</span><span style="color:#E1E4E8;">: </span><span style="color:#79B8FF;">null</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#005CC5;">&quot;data&quot;</span><span style="color:#24292E;">: </span><span style="color:#005CC5;">null</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,6),c=[n];function r(l,p,i,d,h,u){return s(),t("div",null,c)}const m=e(o,[["render",r]]);export{v as __pageData,m as default};
