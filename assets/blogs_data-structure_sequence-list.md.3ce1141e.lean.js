import{_ as o,C as n,c as t,H as l,k as s,w as c,a,Q as r,o as i}from"./chunks/framework.b0840c63.js";const k=JSON.parse('{"title":"顺序表","description":"","frontmatter":{"title":"顺序表","layout":"doc"},"headers":[],"relativePath":"blogs/data-structure/sequence-list.md","filePath":"blogs/data-structure/sequence-list.md","lastUpdated":1698109494000}'),y={name:"blogs/data-structure/sequence-list.md"},E=s("h1",{id:"顺序表",tabindex:"-1"},[a("顺序表 "),s("a",{class:"header-anchor",href:"#顺序表","aria-label":'Permalink to "顺序表"'},"​")],-1),d={style:{display:"flex",gap:"10px"}},h=s("h2",{id:"顺序表定义",tabindex:"-1"},[a("顺序表定义 "),s("a",{class:"header-anchor",href:"#顺序表定义","aria-label":'Permalink to "顺序表定义"'},"​")],-1),u=s("p",null,"线性表的顺序存储又称顺序表。它是用一组地址连续的存储单元依次存储线性表的数据元素，从而使得逻辑上相邻的两个元素在物理位置上也相邻。",-1),_=s("p",{message:"",type:"warning",content:"线性表中元素的位序是从1开始的，但数组的下标是从0开始的/"},null,-1),m=r("",12);function A(f,g,D,b,x,q){const e=n("el-divider"),p=n("el-tag");return i(),t("div",null,[E,l(e),s("div",d,[l(p,null,{default:c(()=>[a("data structure")]),_:1})]),h,u,_,m])}const S=o(y,[["render",A]]);export{k as __pageData,S as default};
