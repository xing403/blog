import{av as i,p as r,U as e,q as l,O as a,S as t,aR as c,ah as s,m as d}from"./chunks/framework.7WxYM5Sz.js";const k=JSON.parse('{"title":"Spring Boot @Value","description":"","frontmatter":{"title":"Spring Boot @Value","layout":"doc"},"headers":[],"relativePath":"blogs/bugs/spring-boot-at-value.md","filePath":"blogs/bugs/spring-boot-at-value.md","lastUpdated":1705893594000}'),p={name:"blogs/bugs/spring-boot-at-value.md"},u=l("h1",{id:"spring-boot-value-为-null",tabindex:"-1"},[t("Spring Boot @Value 为 null "),l("a",{class:"header-anchor",href:"#spring-boot-value-为-null","aria-label":'Permalink to "Spring Boot @Value 为 null"'},"​")],-1),_={style:{display:"flex",gap:"10px"}},g=c('<blockquote><p>在 application.properties 或者 application.yml 中配置一些默认值时，通过@Value 注解可以获取到这些默认值 但结果为 <code>null</code></p></blockquote><p>原因: 使用 <code>static final</code> 修饰的字段，而此时的配置文件还没有加载，所以获取到的值为 <code>null</code></p><h2 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h2><blockquote><p>将从配置文件中获取的值，不通过 <code>static</code> 进行修饰</p></blockquote>',4);function b(h,m,f,V,v,S){const n=s("el-divider"),o=s("el-tag");return d(),r("div",null,[u,e(n),l("div",_,[e(o,null,{default:a(()=>[t("issuse")]),_:1}),e(o,null,{default:a(()=>[t("spring boot")]),_:1}),e(o,null,{default:a(()=>[t("@Value")]),_:1})]),g])}const B=i(p,[["render",b]]);export{k as __pageData,B as default};
